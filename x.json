{
  "name": "string",
  "description": "String manipulation for ChiÏ‡",
  "version": "0.0.2",
  "repository": {
    "type": "git",
    "url": "https://github.com/nodule/string.git"
  },
  "dependencies": {
    "underscore.string": "2.x.x"
  },
  "nodes": [
    {
      "ports": {
        "input": {
          "in": {
            "title": "String",
            "type": "string",
            "required": true
          },
          "append": {
            "title": "Other String",
            "type": "string",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "String",
            "type": "string"
          }
        }
      },
      "phrases": {
        "active": "Appending string"
      },
      "description": "Appends a string to an other string",
      "ns": "string",
      "name": "append",
      "fn": "output.out = input.in + input.append\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "String Parts",
            "type": "array",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "String",
            "type": "string"
          }
        }
      },
      "phrases": {
        "active": "Concatenating string"
      },
      "description": "Combines the text of two or more strings and returns a new string.",
      "ns": "string",
      "name": "concat",
      "fn": "output.out = input.string.concat.apply(null, input. in )\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "String",
            "type": "string",
            "required": true
          },
          "match": {
            "title": "Match",
            "type": "string",
            "required": true
          },
          "replace": {
            "title": "Replacement",
            "type": "string",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "String",
            "type": "string"
          }
        }
      },
      "phrases": {
        "active": "Replacing string"
      },
      "description": "Replaces a string within another string",
      "ns": "string",
      "name": "replace",
      "fn": "var r = new RegExp(input.match, 'g');\noutput.out = input.in.replace(r, input.replace)\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "String",
            "type": "string",
            "required": true
          },
          "seperator": {
            "title": "Seperator",
            "type": "string",
            "description": "Specifies the character(s) to use for separating the string. The separator is treated as a string or a regular expression. If separator is omitted, the array returned contains one element consisting of the entire string. If separator is an empty string, str is converted to an array of characters.",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "String parts",
            "type": "array"
          }
        }
      },
      "phrases": {
        "active": "Splitting string"
      },
      "description": "Splits a String object into an array of strings by separating the string into substrings.",
      "ns": "string",
      "name": "split",
      "fn": "output.out = input. in .split(input.seperator)\n"
    }
  ],
  "twigs": []
}